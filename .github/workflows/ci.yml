name: CI

on:
  pull_request:
  push:
    branches:
      - master
      - develop
      - feature/**

env:
  UBSAN_OPTIONS: print_stacktrace=1

jobs:
  posix:
    strategy:
      fail-fast: false
      matrix:
        include:
         # Linux, gcc
          - toolset: gcc-4.4
            cxxstd: "98,0x"
            address-model: 32,64
            os: ubuntu-latest
            container: ubuntu:16.04
            install:
              - g++-4.4-multilib
            sources:
              - "ppa:ubuntu-toolchain-r/test"
          - toolset: gcc-4.6
            cxxstd: "03,0x"
            address-model: 32,64
            os: ubuntu-latest
            container: ubuntu:16.04
            install:
              - g++-4.6-multilib
            sources:
              - "ppa:ubuntu-toolchain-r/test"
          - toolset: gcc-4.7
            cxxstd: "03,11"
            address-model: 32,64
            os: ubuntu-latest
            container: ubuntu:16.04
            install:
              - g++-4.7-multilib
          - toolset: gcc-4.8
            cxxstd: "03,11"
            address-model: 32,64
            os: ubuntu-latest
            container: ubuntu:18.04
            install:
              - g++-4.8-multilib
          - toolset: gcc-4.9
            cxxstd: "03,11"
            address-model: 32,64
            os: ubuntu-latest
            container: ubuntu:16.04
            install:
              - g++-4.9-multilib
          - toolset: gcc-5
            cxxstd: "03,11,14,1z"
            address-model: 32,64
            os: ubuntu-latest
            container: ubuntu:16.04
            install:
              - g++-5-multilib
          - toolset: gcc-6
            cxxstd: "03,11,14,1z"
            address-model: 32,64
            os: ubuntu-latest
            container: ubuntu:18.04
            install:
              - g++-6-multilib
          - toolset: gcc-7
            cxxstd: "03,11,14,17"
            address-model: 32,64
            os: ubuntu-latest
            container: ubuntu:18.04
            install:
              - g++-7-multilib
          - toolset: gcc-8
            cxxstd: "03,11,14,17,2a"
            address-model: 32,64
            os: ubuntu-latest
            container: ubuntu:18.04
            install:
              - g++-8-multilib
          - toolset: gcc-9
            cxxstd: "03,11,14,17,2a"
            address-model: 32,64
            os: ubuntu-20.04
            install:
              - g++-9-multilib
          - toolset: gcc-10
            cxxstd: "03,11,14,17,20"
            address-model: 32,64
            os: ubuntu-20.04
            install:
              - g++-10-multilib
          - toolset: gcc-11
            cxxstd: "03,11,14,17,20,23"
            address-model: 32,64
            os: ubuntu-22.04
            install:
              - g++-11-multilib
          - toolset: gcc-12
            cxxstd: "03,11,14,17,20,23"
            address-model: 32,64
            os: ubuntu-22.04
            install:
              - g++-12-multilib
          # Linux, clang
          - toolset: clang
            compiler: clang++-3.5
            cxxstd: "03,11"
            os: ubuntu-latest
            container: ubuntu:16.04
            install:
              - clang-3.5
          - toolset: clang
            compiler: clang++-3.6
            cxxstd: "03,11,14"
            os: ubuntu-latest
            container: ubuntu:16.04
            install:
              - clang-3.6
          - toolset: clang
            compiler: clang++-3.7
            cxxstd: "03,11,14"
            os: ubuntu-latest
            container: ubuntu:16.04
            install:
              - clang-3.7
          - toolset: clang
            compiler: clang++-3.8
            cxxstd: "03,11,14"
            os: ubuntu-latest
            container: ubuntu:16.04
            install:
              - clang-3.8
          - toolset: clang
            compiler: clang++-3.9
            cxxstd: "03,11,14"
            os: ubuntu-latest
            container: ubuntu:18.04
            install:
              - clang-3.9
          - toolset: clang
            compiler: clang++-4.0
            cxxstd: "03,11,14"
            os: ubuntu-latest
            container: ubuntu:18.04
            install:
              - clang-4.0
          - toolset: clang
            compiler: clang++-5.0
            cxxstd: "03,11,14,1z"
            os: ubuntu-latest
            container: ubuntu:18.04
            install:
              - clang-5.0
          - toolset: clang
            compiler: clang++-6.0
            cxxstd: "03,11,14,17"
            os: ubuntu-latest
            container: ubuntu:18.04
            install:
              - clang-6.0
          - toolset: clang
            compiler: clang++-7
            cxxstd: "03,11,14,17"
            os: ubuntu-latest
            container: ubuntu:18.04
            install:
              - clang-7
          # Note: clang-8 does not fully support C++20, so it is not compatible with libstdc++-8 in this mode
          - toolset: clang
            compiler: clang++-8
            cxxstd: "03,11,14,17,2a"
            os: ubuntu-latest
            container: ubuntu:18.04
            install:
              - clang-8
              - g++-7
            gcc_toolchain: 7
          - toolset: clang
            compiler: clang++-9
            cxxstd: "03,11,14,17,2a"
            os: ubuntu-20.04
            install:
              - clang-9
          - toolset: clang
            compiler: clang++-10
            cxxstd: "03,11,14,17,20"
            os: ubuntu-20.04
            install:
              - clang-10
          - toolset: clang
            compiler: clang++-11
            cxxstd: "03,11,14,17,20"
            os: ubuntu-22.04
            install:
              - clang-11
          - toolset: clang
            compiler: clang++-12
            cxxstd: "03,11,14,17,20,2b"
            os: ubuntu-22.04
            install:
              - clang-12
          - toolset: clang
            compiler: clang++-13
            cxxstd: "03,11,14,17,20,2b"
            os: ubuntu-22.04
            install:
              - clang-13
          - toolset: clang
            compiler: clang++-14
            cxxstd: "03,11,14,17,20,2b"
            os: ubuntu-22.04
            install:
              - clang-14
          # MacOs, clang
          - toolset: clang
            cxxstd: "03,11,14,17,2a"
            os: macos-11
          - toolset: clang
            cxxstd: "03,11,14,17,2a"
            os: macos-12

    runs-on: ${{matrix.os}}

    steps:
      - uses: actions/checkout@v3

      - name: Install packages
        if: matrix.install
        run: sudo apt install ${{matrix.install}}

      - name: Setup Boost
        run: |
          echo GITHUB_REPOSITORY: $GITHUB_REPOSITORY
          LIBRARY=${GITHUB_REPOSITORY#*/}
          echo LIBRARY: $LIBRARY
          echo "LIBRARY=$LIBRARY" >> $GITHUB_ENV
          BUILD_JOBS=$((nproc || sysctl -n hw.ncpu) 2> /dev/null)
          echo BUILD_JOBS : $BUILD_JOBS
          echo "BUILD_JOBS=$BUILD_JOBS" >> $GITHUB_ENV
          echo GITHUB_BASE_REF: $GITHUB_BASE_REF
          echo GITHUB_REF: $GITHUB_REF
          REF=${GITHUB_BASE_REF:-$GITHUB_REF}
          REF=${REF#refs/heads/}
          echo REF: $REF
          BOOST_BRANCH=develop && [ "$REF" == "master" ] && BOOST_BRANCH=master || true
          echo BOOST_BRANCH: $BOOST_BRANCH
          cd ..
          git clone -b $BOOST_BRANCH --depth 1 https://github.com/boostorg/boost.git boost-root
          cd boost-root
          cp -r $GITHUB_WORKSPACE/* libs/$LIBRARY
          git submodule update --init tools/boostdep
          python tools/boostdep/depinst/depinst.py --git_args "--jobs 3" $LIBRARY
          ./bootstrap.sh
          ./b2 -d0 headers

      - name: Create user-config.jam
        if: matrix.compiler
        run: |
          echo "using ${{matrix.toolset}} : : ${{matrix.compiler}} ;" > ~/user-config.jam

      - name: Run tests
        run: |
          cd ../boost-root
          ./b2 -j $BUILD_JOBS libs/$LIBRARY/test toolset=${{matrix.toolset}} cxxstd=${{matrix.cxxstd}} variant=debug,release

  windows:
    strategy:
      fail-fast: false
      matrix:
        include:
          - toolset: msvc-14.2
            cxxstd: "14,17,latest"
            addrmd: 32,64
            os: windows-2019
          - toolset: msvc-14.3
            cxxstd: "14,17,latest"
            addrmd: 32,64
            os: windows-2022

    runs-on: ${{matrix.os}}

    steps:
      - uses: actions/checkout@v3

      - name: Setup Boost
        shell: cmd
        run: |
          echo GITHUB_REPOSITORY: %GITHUB_REPOSITORY%
          for /f %%i in ("%GITHUB_REPOSITORY%") do set LIBRARY=%%~nxi
          echo LIBRARY: %LIBRARY%
          echo LIBRARY=%LIBRARY%>>%GITHUB_ENV%
          echo GITHUB_BASE_REF: %GITHUB_BASE_REF%
          echo GITHUB_REF: %GITHUB_REF%
          if "%GITHUB_BASE_REF%" == "" set GITHUB_BASE_REF=%GITHUB_REF%
          set BOOST_BRANCH=develop
          for /f %%i in ("%GITHUB_BASE_REF%") do if "%%~nxi" == "master" set BOOST_BRANCH=master
          echo BOOST_BRANCH: %BOOST_BRANCH%
          cd ..
          git clone -b %BOOST_BRANCH% --depth 1 https://github.com/boostorg/boost.git boost-root
          cd boost-root
          xcopy /s /e /q %GITHUB_WORKSPACE% libs\%LIBRARY%\
          git submodule update --init tools/boostdep
          python tools/boostdep/depinst/depinst.py --git_args "--jobs 3" %LIBRARY%
          cmd /c bootstrap
          b2 -d0 headers

      - name: Run tests
        shell: cmd
        run: |
          cd ../boost-root
          b2 -j %NUMBER_OF_PROCESSORS% libs/%LIBRARY%/test toolset=${{matrix.toolset}} cxxstd=${{matrix.cxxstd}} address-model=${{matrix.addrmd}} variant=debug,release
